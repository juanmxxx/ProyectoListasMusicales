/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.management.ModeloPlayList;
import java.awt.event.WindowListener;
import static java.lang.Integer.parseInt;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import proyectolistasmusicales.Cancion;

/**
 *
 * @author velet
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    
    ModeloPlayList modelo;
    private static final int COLUMNA_RUTA = 2;
    private static final int COLUMNA_DURACION = 1;
    private static final int COLUMNA_TITULO = 0;
    
    public Interfaz() {
        initComponents();
        inicializarComponentes();
    }
    //Inicializador, inicia el modelo (tabla) y lo asigna a la clase
    public void inicializarComponentes(){
        modelo = new ModeloPlayList();
        playlistTabla.setModel(modelo);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playlistTabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        botonModificarCancion = new javax.swing.JButton();
        eliminarCancionBoton = new javax.swing.JButton();
        añadirCancionBoton = new javax.swing.JButton();
        salirBoton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cargarMenu = new javax.swing.JMenuItem();
        guardarMenu = new javax.swing.JMenuItem();
        botonNuevaPlaylist = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playlistTabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        playlistTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Titulo", "Duracion", "Ubicacion"
            }
        ));
        playlistTabla.setToolTipText("");
        playlistTabla.setName(""); // NOI18N
        jScrollPane1.setViewportView(playlistTabla);
        playlistTabla.getAccessibleContext().setAccessibleName("");

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Playlist");

        botonModificarCancion.setText("Modificar cancion");
        botonModificarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarCancionActionPerformed(evt);
            }
        });

        eliminarCancionBoton.setText("Eliminar cancion");
        eliminarCancionBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCancionBotonActionPerformed(evt);
            }
        });

        añadirCancionBoton.setText("Añadir cancion");
        añadirCancionBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirCancionBotonActionPerformed(evt);
            }
        });

        salirBoton.setText("Salir");
        salirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(añadirCancionBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarCancionBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonModificarCancion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(botonModificarCancion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarCancionBoton)
                        .addGap(12, 12, 12)
                        .addComponent(añadirCancionBoton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(salirBoton)
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        cargarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cargarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI.icons/descargar.png"))); // NOI18N
        cargarMenu.setText("Cargar");
        cargarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(cargarMenu);

        guardarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI.icons/subir.png"))); // NOI18N
        guardarMenu.setText("Guardar");
        guardarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(guardarMenu);

        botonNuevaPlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonNuevaPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI.icons/editar.png"))); // NOI18N
        botonNuevaPlaylist.setText("Nuevo");
        botonNuevaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaPlaylistActionPerformed(evt);
            }
        });
        jMenu1.add(botonNuevaPlaylist);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarMenuActionPerformed
        // TODO add your handling code here:
        String rutaLeido = "";
        
        JFileChooser selector = new JFileChooser();
        int opcion = selector.showOpenDialog(null);
        //Almacenamos la ruta de leido en un String si se selecciona y se acepta una
        //En caso contrario el programa no hara nada
        if(opcion == JFileChooser.APPROVE_OPTION){
            rutaLeido = selector.getSelectedFile().getPath();
            //Se comprueba si se ha leido correctamente el archivo y se anuncia
            if(modelo.cargarPlaylist(rutaLeido)){
                modelo.fireTableDataChanged();
                JOptionPane.showMessageDialog(this, "El archivo fue cargado con exito!");
            }else
                JOptionPane.showMessageDialog(this, "Formato invalido", "ERROR", JOptionPane.ERROR_MESSAGE);    
        }             
    }//GEN-LAST:event_cargarMenuActionPerformed

    private void eliminarCancionBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCancionBotonActionPerformed
        //Selecionamos la cancion (la cual esta en una fila) que queremos eliminar
        int fila = playlistTabla.getSelectedRow();
        
        //Comprobamos si esta dentro de rango y si es asi eliminamos la cancion pertinente
        if(fila >= 0){
            modelo.remove(fila);
            modelo.fireTableDataChanged();
        }else{
            JOptionPane.showMessageDialog(this, "Debes antes seleccionar una cancion", "ATENCION", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminarCancionBotonActionPerformed

    private void añadirCancionBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirCancionBotonActionPerformed
        // TODO add your handling code here:
        AñadirCancion ventana = new AñadirCancion(this, true);
        ventana.setVisible(true);
        //Si no se sale finalmente de la ventana, se crea la cancion
        //En caso contrario el programa no hara nada   
        if(!ventana.getSalir() && !ventana.getTitulo().isEmpty() && !ventana.getDuracion().isEmpty() && !ventana.getRuta().isEmpty()){
            Cancion nuevaCancion = new Cancion(ventana.getTitulo(), ventana.getDuracion(), ventana.getRuta());
            
            if(!modelo.listaModeloRepetida(nuevaCancion)){
                modelo.add(nuevaCancion);
                modelo.fireTableDataChanged();
            }else
                JOptionPane.showMessageDialog(this, "La cancion ya existe", "ATENCION", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_añadirCancionBotonActionPerformed

    private void salirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBotonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_salirBotonActionPerformed

    private void botonModificarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarCancionActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = playlistTabla.getSelectedRow();
        //Comprueba antes que se ha seleccionado una cancion
        if(filaSeleccionada >= 0){
            //Si la ha seleccionado obtendremos los datos de la cancion actual que queremos modificar para que aparezca a modo de informacion en la ventana
            String ruta = (String) modelo.getValueAt(filaSeleccionada, COLUMNA_RUTA);
            String duracion = (String) modelo.getValueAt(filaSeleccionada, COLUMNA_DURACION);
            String titulo = (String) modelo.getValueAt(filaSeleccionada, COLUMNA_TITULO);
            //Si hemos seleccinado una fila generamos la ventana para modificarla
            ModificarCancion ventana = new ModificarCancion(this, true, titulo, duracion, ruta);
            ventana.setVisible(true);
            //Si no se presiono el boton de salir se modificara la cancion finalmente
            if(!ventana.getSalir()){
                Cancion cancionModificada = new Cancion(ventana.getTitulo(), ventana.getDuracion(), ventana.getRuta());
                //Tambien se comprueba que la cancion a añadir no se repita, si no lo avisara
                //Si no es asi pues actualiza la tabla
                if(!modelo.listaModeloRepetida(cancionModificada)){
                    modelo.setValueAt(cancionModificada.getTitulo(), filaSeleccionada, COLUMNA_TITULO);
                    modelo.setValueAt(cancionModificada.getDuracion(), filaSeleccionada, COLUMNA_DURACION);
                    modelo.setValueAt(cancionModificada.getRuta(), filaSeleccionada, COLUMNA_RUTA);
                    modelo.fireTableDataChanged();
                }else
                    JOptionPane.showMessageDialog(this, "La cancion ya existe", "ATENCION", JOptionPane.WARNING_MESSAGE);
            }
        }else
            JOptionPane.showMessageDialog(this, "Debes antes seleccionar una cancion", "ATENCION", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_botonModificarCancionActionPerformed

    private void guardarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuActionPerformed
        //Se comprueba primeramente que haya minimo una cancion para guardar
        //En caso contrario el programa lanzara una advertencia
        if(modelo.getRowCount() > 0){
            String rutaGuardado = "", formato = "";
            boolean estaGuardado;

            //Invocar el JDialog que da la opcion de guardado y inicializarlo
            opcionGuardado ventana = new opcionGuardado(this, true);
            ventana.setVisible(true);
            ventana.setLocationRelativeTo(null);             
            //Despues de invocar la ventana con las opciones, la almacenamos en formato
            formato = ventana.getContenido();
            //Comprobamos antes de ir a guardarlo todo que se ha elegido algun formato
            if(!formato.isEmpty()){
                //Una vez elegida la opcion, donde queremos escribir nuestra playlist
                JFileChooser selector = new JFileChooser();
                int opcion = selector.showOpenDialog(null);
                //Almacenamos la ruta de guardado en un String
                if(opcion == JFileChooser.APPROVE_OPTION){
                    rutaGuardado = selector.getSelectedFile().getPath(); 
                    //Con este boolean comprobamos en todo momento como va la ejecucion a la hora de guardar un archivo
                    estaGuardado = modelo.guardarPlaylist(formato, rutaGuardado);

                    if(estaGuardado){
                        JOptionPane.showMessageDialog(this, "El archivo se guardo exitosamente!");
                    }else
                        JOptionPane.showMessageDialog(this, "No se guardo ningun archivo", "ERROR",  JOptionPane.ERROR_MESSAGE);
                }
            }else
                JOptionPane.showMessageDialog(this, "No se selecciono ningun formato", "ERROR",  JOptionPane.ERROR_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "No se puede guardar una lista vacia", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_guardarMenuActionPerformed

    private void botonNuevaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaPlaylistActionPerformed
        // TODO add your handling code here:
        //Se comprueba previamente que la playlist actual no este vacia
        if(modelo.getRowCount() != 0){
            int opcion = JOptionPane.showConfirmDialog(this, "¿Desea crear una nueva playlist vacia?");
        
            if(opcion == JOptionPane.YES_OPTION){
                modelo.nuevaPlaylist();
                modelo.fireTableDataChanged();
            }
        }else
            JOptionPane.showMessageDialog(this, "La playlist actual no contiene ninguna cancion", "ATENCION", JOptionPane.WARNING_MESSAGE);
        
        
    }//GEN-LAST:event_botonNuevaPlaylistActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton añadirCancionBoton;
    private javax.swing.JButton botonModificarCancion;
    private javax.swing.JMenuItem botonNuevaPlaylist;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JMenuItem cargarMenu;
    private javax.swing.JButton eliminarCancionBoton;
    private javax.swing.JMenuItem guardarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable playlistTabla;
    private javax.swing.JButton salirBoton;
    // End of variables declaration//GEN-END:variables
}
